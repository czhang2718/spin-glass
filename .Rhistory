for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
sysdate <- Sys.Date()
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
print(d)
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
df <- data.frame(year, age, freq)
ggplot(df, aes(fill=age, y=freq, x=year)) +
geom_bar(position="stack", stat="identity")
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(str==NULL) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
df <- data.frame(year, age, freq)
ggplot(df, aes(fill=age, y=freq, x=year)) +
geom_bar(position="stack", stat="identity")
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(i in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
age
length(age)
length(year)
length(freq)
freq
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
cnt <- rep(0, current_year+1)
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str) || str==character(0)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str) | str==character(0)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
df <
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null) next
if(length(str)==0) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
if(length(str)==0) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
if(length(str)==0) next
if(is.na(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
freq <- c(freq, cnt[j])
}
}
length(age)
freq
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
if(length(str)==0) next
if(is.na(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
print(cnt[j])
freq <- c(freq, cnt[j])
}
}
age <- c()
year <- c()
freq <- c()
current_year=as.integer(format(Sys.Date(), "%Y"))
cnt <- rep(0, current_year+1)
for(i in 0:13){
for(j in 0:current_year) cnt[j]=0;
event_call=GET(paste0('https://api.fda.gov/drug/event.json?search=patient.drug.medicinalproduct:"', gsub(" ", "+", substance), '"+AND+patient.patientonsetage:[', 10*i, '+TO+', 10*i+9, "]&count=receiptdate"))
event_json <- fromJSON(content(event_call, "text"), flatten = TRUE)
for(k in 1:length(event_json$results$time)){
str <- event_json$results$time[i]
if(is.null(str)) next
if(length(str)==0) next
if(is.na(str)) next
print(str)
d <- paste(substr(str, 1, 4), substr(str, 5, 6), substr(str, 7, 8), sep="-")
if(d<sysdate){
cnt[as.integer(substr(str, 1, 4))]=cnt[as.integer(substr(str, 1, 4))]+1
}
}
if(length(event_json$results$time)==0) next
for(j in 0:current_year){
# print(cnt[j])
if(length(cnt[j])==0 || cnt[j]==0) next
age <- c(age, paste0(10*i, "-", 10*i+9))
year <- c(year, j)
print(cnt[j])
freq <- c(freq, cnt[j])
}
}
age
year
freq
df <- data.frame(year, age, freq)
ggplot(df, aes(fill=age, y=freq, x=year)) +
geom_bar(position="stack", stat="identity")
g <- ggplot(df, aes(fill=age, y=freq, x=year)) +
geom_bar(position="stack", stat="identity")
g
View(dset_SUBs)
df <- data.frame(year, age, freq)
ggplot(df, aes(fill=age, y=freq, x=year)) +
geom_bar(position="stack", stat="identity")
ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
View(g)
library(ggplot2)
ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
print(g)
g<- ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
print(g)
runApp('GSRS-Dashboard')
runApp('GSRS-Dashboard')
ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
print(ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity"))
ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
print(ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity"))
print(ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity"))
df
g<- ggplot(df, aes(fill=age, y=freq, x=year)) + geom_bar(position="stack", stat="identity")
show(g)
shiny::show(g)
ggplot:show(g)
ggplot::show(g)
ggplot2::show(g)
n=10
library(pracma)
c=3
x=seq(1, 2**n)
y=c()
for(r in 1:2**n){
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
y=c(y, p)
}
plot(x, y)
2**n
x
y
n=5
n/3
n/2
sig
r=3
erfinv(2*r-1)
erfinv(.3)
erfinv(1)
erfinv(-2)
erfinv(3.4)
erfinv(1.1)
erfinv(.45)
n=10
c=3
x=seq(1, 2**n)
y=c()
for(i in 1:2**n){
r=i/2**n
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
print(p)
y=c(y, p)
}
plot(x, y)
View(y)
y
x=seq(1, 2**n)
y=c()
for(i in 0:2**n){
r=i/2**n
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
print(p)
y=c(y, 100000*p)
}
plot(x, y)
x=seq(0, 2**n)
y=c()
for(i in 0:2**n){
r=i/2**n
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
print(p)
y=c(y, 100000*p)
}
plot(x, y)
setwd("~/spin-glass")
write.csv(y, "y.csv")
x=seq(0, 2**n)
y=c()
for(i in 0:2**n){
r=i/2**n
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
print(p)
y=c(y, p)
}
write.csv(y, "y.csv")
plot(x, y)
n=10
c=3
x=seq(0, 2**n)
y=c()
for(i in 0:2**n){
r=i/2**n
sig=c*sqrt(n)/(sqrt(2)*erfinv(2*r-1))
p=(sig**(n/2-1))/(2**(n/2))
p=p*exp(-sig/2)/gamma(n/2)
print(sig)
y=c(y, p)
}
